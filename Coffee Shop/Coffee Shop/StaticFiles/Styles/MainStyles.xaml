<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Coffee_Shop">
    <!--<Style TargetType="Border" x:Key="BorderForWindow">
                <Setter Property="BorderBrush" Value="#CFB73E"/>
                <Setter Property="CornerRadius" Value="10"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Style>-->
    
    <!--<Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <ScaleTransform ScaleX="1.2" ScaleY="1.2" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>-->
    
    <Style TargetType="Button" x:Key="ButtonHeader">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="60"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <!--<Style.Triggers>
                    -->
        <!--MULTITRIGGER-->
        <!--
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            -->
        <!--<Condition Property="Mouse.IsPressed" Value="True"/>-->
        <!--<Condition Property="IsMouseOver" Value="True"/>-->
        <!--
                        </MultiTrigger.Conditions>
                        <MultiTrigger.Setters>
                            <Setter Property="Width" Value="28" />
                            <Setter Property="Height" Value="28" />
                        </MultiTrigger.Setters>
                    </MultiTrigger>
                    <DataTrigger Binding="{Binding ElementName=checkBox1, Path=IsChecked}"
                        Value="True">
                        <Setter Property="IsEnabled" Value="False"/>
                    </DataTrigger>
                </Style.Triggers>-->
    </Style>

    <Style TargetType="Image" x:Key="ImageHeader">
        <Setter Property="Width" Value="34"/>
        <Setter Property="Height" Value="34"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard >
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Width"  From="32" To="36" Duration="0:0:0.2" />
                            <DoubleAnimation Storyboard.TargetProperty="Height" From="32" To="36" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="Button.MouseLeave">
                <EventTrigger.Actions>
                    <BeginStoryboard >
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Width"  From="40" To="32" Duration="0:0:0.2" />
                            <DoubleAnimation Storyboard.TargetProperty="Height" From="40" To="32" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBox" x:Key="TBSearch">
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="10" />
            </Style>
        </Style.Resources>
        <Setter Property="BorderThickness" Value="1.5"/>
        <Setter Property="BorderBrush" Value="#CFB73E"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Padding" Value="15 2 0 2"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <Style TargetType="TextBlock" x:Key="DataTableInToolTip">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Foreground" Value="White"/>
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="10" />
                <Setter Property="BorderBrush" Value="#CFB73E" />
                <Setter Property="BorderThickness" Value="0 0 0 1" />
            </Style>
        </Style.Resources>
    </Style>

    <ControlTemplate TargetType="Label" x:Key="DescriptionTableElement">
        <Border BorderBrush="#CFB73E" BorderThickness="0 0 0 1">
            <TextBlock Text="{TemplateBinding Content}" FontSize="11" VerticalAlignment="Center" HorizontalAlignment="Center"/>
        </Border>
    </ControlTemplate>
    
   
    
    <Style TargetType="Button" x:Key="ButtonForLogIO">
        <!--<Style.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="13" />
                    </Style>
                </Style.Resources>-->
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#CFB73E"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
    </Style>
    
    <Style TargetType="PasswordBox" x:Key="PasswordForLogIO">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFFADF5A"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="250"/>
        <Setter Property="Foreground" Value="#FFFADF5A"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="10 2 10 10"/>
        <Setter Property="BorderThickness" Value="0 0 0 2"/>
        <Setter Property="BorderBrush" Value="White"/>
    </Style>


    <ControlTemplate TargetType="Button" x:Key="ButtonTemplate">
        <Border  CornerRadius="13" BorderBrush="#CFB73E" BorderThickness="1" Background="Transparent" Height="30" Width="100">
            <Border.Style>
                <Style>
                    <Style.Triggers>
                        <EventTrigger RoutedEvent="Button.MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--<DoubleAnimation Storyboard.TargetProperty="Background"  From="Transparent" To="#CFB73E" Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="Height" From="40" To="32" Duration="0:0:0.2" />-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <TextBlock Text="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
        </Border>
    </ControlTemplate>

</ResourceDictionary>